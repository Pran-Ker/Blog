{"ast":null,"code":"var _jsxFileName = \"/home/pran_ker/100DaysOfCode/Fullstack/notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport uuid from 'react-uuid';\nimport Main from './Main';\nimport Sidebar from './Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState(localStorage.notes ? JSON.parse(localStorage.notes) : []);\n  const [activeNote, setActiveNote] = useState(false);\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"\",\n      lastModified: Date.now()\n    };\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = noteId => {\n    setNotes(notes.filter(_ref => {\n      let {\n        id\n      } = _ref;\n      return id !== noteId;\n    }));\n  };\n\n  const onUpdateNote = updatedNote => {\n    const updatedNotesArr = notes.map(note => {\n      if (note.id === updatedNote.id) {\n        return updatedNote;\n      }\n\n      return note;\n    });\n    setNotes(updatedNotesArr);\n  };\n\n  const getActiveNote = () => {\n    return notes.find(_ref2 => {\n      let {\n        id\n      } = _ref2;\n      return id === activeNote;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      notes: notes,\n      onAddNote: onAddNote,\n      onDeleteNote: onDeleteNote,\n      activeNote: activeNote,\n      setActiveNote: setActiveNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      activeNote: getActiveNote(),\n      onUpdateNote: onUpdateNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lYbwunTc6vlh1N8X9eZy8GMfiNY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","uuid","Main","Sidebar","App","notes","setNotes","localStorage","JSON","parse","activeNote","setActiveNote","setItem","stringify","onAddNote","newNote","id","title","body","lastModified","Date","now","onDeleteNote","noteId","filter","onUpdateNote","updatedNote","updatedNotesArr","map","note","getActiveNote","find"],"sources":["/home/pran_ker/100DaysOfCode/Fullstack/notes/src/App.js"],"sourcesContent":["import './App.css';\nimport {useEffect, useState} from \"react\";\n\nimport uuid from 'react-uuid';\nimport Main from './Main';\nimport Sidebar from './Sidebar';\nfunction App() {\n  const [notes, setNotes] = useState(\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\n  );\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      id: uuid(),\n      title: \"Untitled Note\",\n      body: \"\",\n      lastModified: Date.now(),\n    };\n\n    setNotes([newNote, ...notes]);\n    setActiveNote(newNote.id);\n  };\n\n  const onDeleteNote = (noteId) => {\n    setNotes(notes.filter(({ id }) => id !== noteId));\n  };\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotesArr = notes.map((note) => {\n      if (note.id === updatedNote.id) {\n        return updatedNote;\n      }\n\n      return note;\n    });\n\n    setNotes(updatedNotesArr);\n  };\n\n  const getActiveNote = () => {\n    return notes.find(({ id }) => id === activeNote);\n  };\n\n  return (\n    <div className=\"App\">\n      <Sidebar\n        notes={notes}\n        onAddNote={onAddNote}\n        onDeleteNote={onDeleteNote}\n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n      />\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAChCO,YAAY,CAACF,KAAb,GAAqBG,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACF,KAAxB,CAArB,GAAsD,EADtB,CAAlC;EAGA,MAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;EAEAD,SAAS,CAAC,MAAM;IACdQ,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeR,KAAf,CAA9B;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;EAIA,MAAMS,SAAS,GAAG,MAAM;IACtB,MAAMC,OAAO,GAAG;MACdC,EAAE,EAAEf,IAAI,EADM;MAEdgB,KAAK,EAAE,eAFO;MAGdC,IAAI,EAAE,EAHQ;MAIdC,YAAY,EAAEC,IAAI,CAACC,GAAL;IAJA,CAAhB;IAOAf,QAAQ,CAAC,CAACS,OAAD,EAAU,GAAGV,KAAb,CAAD,CAAR;IACAM,aAAa,CAACI,OAAO,CAACC,EAAT,CAAb;EACD,CAVD;;EAYA,MAAMM,YAAY,GAAIC,MAAD,IAAY;IAC/BjB,QAAQ,CAACD,KAAK,CAACmB,MAAN,CAAa;MAAA,IAAC;QAAER;MAAF,CAAD;MAAA,OAAYA,EAAE,KAAKO,MAAnB;IAAA,CAAb,CAAD,CAAR;EACD,CAFD;;EAIA,MAAME,YAAY,GAAIC,WAAD,IAAiB;IACpC,MAAMC,eAAe,GAAGtB,KAAK,CAACuB,GAAN,CAAWC,IAAD,IAAU;MAC1C,IAAIA,IAAI,CAACb,EAAL,KAAYU,WAAW,CAACV,EAA5B,EAAgC;QAC9B,OAAOU,WAAP;MACD;;MAED,OAAOG,IAAP;IACD,CANuB,CAAxB;IAQAvB,QAAQ,CAACqB,eAAD,CAAR;EACD,CAVD;;EAYA,MAAMG,aAAa,GAAG,MAAM;IAC1B,OAAOzB,KAAK,CAAC0B,IAAN,CAAW;MAAA,IAAC;QAAEf;MAAF,CAAD;MAAA,OAAYA,EAAE,KAAKN,UAAnB;IAAA,CAAX,CAAP;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,OAAD;MACE,KAAK,EAAEL,KADT;MAEE,SAAS,EAAES,SAFb;MAGE,YAAY,EAAEQ,YAHhB;MAIE,UAAU,EAAEZ,UAJd;MAKE,aAAa,EAAEC;IALjB;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,IAAD;MAAM,UAAU,EAAEmB,aAAa,EAA/B;MAAmC,YAAY,EAAEL;IAAjD;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAtDQrB,G;;KAAAA,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}